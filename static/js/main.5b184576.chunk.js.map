{"version":3,"sources":["logo.svg","register.png","register.js","firebase.js","login.js","sidebaroptions.js","sidebar.js","tweetbox.js","post.js","feed.js","shortuserwidget.js","widgets.js","registerform.js","registertwo.js","profile.js","otheruserprofile.js","App.js","reportWebVitals.js","reducers/userInfo.js","reducers/updatecomponent.js","reducers/userId.js","reducers/index.js","index.js"],"names":["Register","className","to","firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","storage","Login","auth","history","useHistory","useState","email","setEmail","password","setPassword","err","setErr","login","a","signInWithEmailAndPassword","loginUser","console","log","push","message","errmessage","type","placeholder","onChange","e","target","value","onClick","href","Sidebaroptions","active","text","Icon","redirect","Sidebar","vals","map","x","Button","variant","fullWidth","TweetBox","props","currUser","currentUser","inputFile","useRef","tweet","setTweet","tweetImg","setTweetImg","setLink","username","setUsername","avatar","setAvatar","twittername","setTwittername","showHideEmojiPicker","setShowHideEmojiPicker","joined","setJoined","fileImg","setFileImg","bio","setBio","setUserInfo","uid","collection","where","get","currUserDb","udata","docs","user","data","displayName","useEffect","sendTweet","preventDefault","date","Date","timeStamp","toJSON","slice","replace","toTimeString","split","imglink","storageRef","ref","imageRef","child","name","put","getDownloadURL","add","url","userId","image","userName","verified","likes","retweets","responses","children","update","Avatar","src","id","style","display","files","length","parts","fileType","URL","createObjectURL","current","click","onEmojiClick","event","emojiObject","emoji","Post","timestamp","updatePost","thisPostUserId","dispatch","useDispatch","setLikes","numberOfLikes","setNumberOflikes","liked","setLiked","numberOfRetweets","retweeted","isRetweet","setisRetweet","retweetedBy","setRetweetedBy","showreplybox","setShowreplybox","reply","setReply","allReplies","setAllReplies","linkToProfile","setLinkToProfile","initialLikesCheck","getData","checkIfCurrent","thispost","doc","thispostdata","retweet","tweets","mapped","includes","addLike","index","findIndex","splice","set","parent","then","tweetsNew","numOfLikes","addRetweet","newTimeStamp","parentId","parentdata","thisuserindex","childindex","delete","docRef","allRetweets","retweetid","childId","addReply","thisTweet","parentid","mappedParent","isReply","replyId","getallReplies","responcesIds","completeResponces","payload","VerifiedUserRounded","ChatBubbleOutline","fontSize","RepeatOutlined","fill","FavoriteBorder","PublishOutlined","Feed","currentValue","Store","store","unsubscribe","subscribe","state","previousValue","getState","getPosts","posts","setPosts","handleChange","snapshot","currUserId","res","following","filter","ShortUserWidget","followed","setFollowed","addRemoveFollow","otherUserDocId","mappedUser","addFollowing","currUserDocId","mappedCurrentUser","followers","index2","Widgets","userIdForImg","images","setImages","suggestUsers","setSuggestUsers","suggestions","currUserNotFollowed","currUserNotFollowedMapped","getImages","imagesDb","imagesDbMapped","imagesFiltered","RegisterForm","register","createUserWithEmailAndPassword","setTimeout","RegisterTwo","uploadImage","alert","updateProfile","getMonth","getFullYear","Profile","tab1Ref","tab2Ref","tab3Ref","tab4Ref","tab1","tab2","tab3","tab4","setDisplayName","twitterName","setTwitterName","alltweets","setAllTweets","myTweets","setMyTweets","thisuserId","setthisUserId","setCurrentTab","myLikes","setMyLikes","tweetsWithMedia","setTweetsWithMedia","numberOfFollowers","setNumberOfFollowers","numberOfFollowing","setNumberOfFollowing","showModal","setShowModal","avatarChanged","setAvatarChanged","modalText","setModalText","modalHeaderText","setModalHeaderText","avatarStep","setAvatarStep","myBio","changeMyBio","currUserEntry","entryId","currUserEntryMapped","getCurrUserData","currUserDbMapped","currUserTweetsDb","currUserTweetsDbMapped","my","currUserLikesDb","currUserLikesDbMapped","currUserTweetsWithMedia","initialCheckFollow","currentUserId","currentUserDb","switchTab","num","saveBio","overlayClassName","isOpen","contentLabel","maxLength","OtherUserProfile","useSelector","userInfo","setUserId","otherUserId","otheruser","mappedotherUser","App","setCurrUser","onAuthStateChanged","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","action","updatecomponent","combineReducers","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b184576.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/register.36dbbe34.png\";","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './register.css'\r\nimport Img from './register.png';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\n\r\nexport default function Register() {\r\n\r\n\r\n    \r\n\r\n    return (\r\n        <div className='register'>\r\n            <div className='big-image-col'>\r\n                <div className='overlay-twitter'>\r\n                <TwitterIcon className='twitter-icon'/>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className='register-col'>\r\n            <div className='twitter-sign-col'>\r\n                    <TwitterIcon className='twitter-icon'/>\r\n                </div>\r\n                <div className='bigger-text-col'>\r\n                    In touch with the events\r\n                </div>\r\n                <div className='smaller-text-col'>\r\n                    Join ReacTwitter right now!\r\n                </div>\r\n                <div className='register-col-btn'>\r\n                    <div className='register-btn-div'>\r\n                    <Link to='/registerform'>  <button className='register-btn'>Register</button> </Link>\r\n                    </div>\r\n                    <div className='login-btn-div'>\r\n                      <Link to='/login'><button className='login-btn'>Log in</button></Link>  \r\n                    </div>\r\n                   \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport firebase from 'firebase';\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDA5sEcESGNGI5oee2C1QGAV8aDtDauGxg\",\r\n  authDomain: \"reactwitter-364e1.firebaseapp.com\",\r\n  projectId: \"reactwitter-364e1\",\r\n  storageBucket: \"reactwitter-364e1.appspot.com\",\r\n  messagingSenderId: \"274058259196\",\r\n  appId: \"1:274058259196:web:9ccde899f0b3090d294579\"\r\n};\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\n  const db = firebaseApp.firestore();\r\n\r\n  const storage = firebaseApp.storage(); \r\n\r\n  export {firebaseApp, db, storage};","import React, {useState} from 'react';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport {firebaseApp} from './firebase';\r\nimport './login.css';\r\n\r\nexport default function Login() {\r\n\r\n    const auth = firebaseApp.auth();\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [err, setErr] = useState('');\r\n\r\n    const login = async() => {\r\n        try {\r\n        const loginUser = await auth.signInWithEmailAndPassword(email, password);\r\n        console.log(loginUser)\r\n        history.push('/dashboard');\r\n        } catch(err) {\r\n            console.log(err);\r\n            const errmessage = await err.message;\r\n            console.log(errmessage)\r\n            setErr(errmessage);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='login'>\r\n            <div className='twitter-sign'>\r\n                <TwitterIcon className='twitter-icon'/>\r\n            </div>\r\n            <div className='twitter-login-text'>\r\n                Log in to ReacTwitter\r\n            </div>\r\n            {err&&<p>Check your email and password and try again</p>}\r\n\r\n            <div className='login-email'>\r\n                <input type='text' placeholder='Your e-mail' onChange={(e) => setEmail(e.target.value)} />\r\n            </div>\r\n            <div className='login-password'>\r\n                <input type='password' placeholder='Your e-password' onChange={(e) => setPassword(e.target.value)} />\r\n            </div>\r\n            <div className='login-btn-form'>\r\n                <button className='login-btn-form-btn' onClick={() => login()}>Log in</button>\r\n            </div>\r\n            <div className='forgot-register'>\r\n                <div className='forgot'>\r\n                    <Link to='/forgotpassword'> <a href='#'> Forgot password? </a> </Link>\r\n                </div>\r\n                <div className='register-redirect'>\r\n                    <Link to='/registerform'><a href='#'>Register</a></Link>     \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './sidebaroptions.css'\r\n\r\nexport default function Sidebaroptions({active, text, Icon, redirect}) {\r\n\r\n    return (\r\n        <Link to={redirect}>\r\n        <div className={`sidebarOption ${active && 'sidebarOption-active'}`}>\r\n            {Icon}\r\n            <h2>{text}</h2>\r\n        </div>\r\n        </Link>\r\n    )\r\n}","import React from 'react';\r\nimport './sidebar.css'\r\nimport { Button } from '@material-ui/core';\r\n\r\n\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport Sidebaroptions from './sidebaroptions';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\n\r\nexport default function Sidebar() {\r\n    const vals = [['Home', <HomeIcon />, '/dashboard'],['Explore', <SearchIcon />], ['Notifications', <NotificationsIcon />], ['Messages', <MailOutlineIcon />], ['Bookmarks', <BookmarkBorderIcon />], ['Lists', <ListAltIcon />], ['Profile', <PersonIcon />, '/profile'], ['More', <MoreHorizIcon />]]\r\n    return (\r\n        <div className='sidebar'>\r\n            <TwitterIcon className='twitter-icon' />\r\n            {\r\n                vals.map(e => {\r\n                    let x = e[1]\r\n                    return (\r\n                        \r\n                        <Sidebaroptions active={true} text={e[0]} Icon ={x} redirect={e[2]} />\r\n                    )\r\n                })\r\n            }\r\n            <Button variant='outlined' className='sidebar-btn' fullWidth='true'>Tweet</Button>  \r\n            \r\n        </div>\r\n        )\r\n};\r\n\r\n","import React, {useState, useRef, useEffect} from 'react';\r\nimport {Avatar, Button} from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport './tweetbox.css';\r\nimport props from 'prop-types';\r\nimport Picker from 'emoji-picker-react';\r\n\r\nimport CropOriginalIcon from '@material-ui/icons/CropOriginal';\r\nimport GifIcon from '@material-ui/icons/Gif';\r\nimport PollIcon from '@material-ui/icons/Poll';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport EventIcon from '@material-ui/icons/Event';\r\n\r\nimport {storage, db, firebaseApp} from './firebase'\r\n\r\n\r\nexport default function TweetBox(props) {\r\n\r\n    const currUser =firebaseApp.auth().currentUser;\r\n    const inputFile = useRef(null);\r\n\r\n    const [tweet, setTweet] = useState('');\r\n    const [tweetImg, setTweetImg] = useState('');\r\n    const [link, setLink] = useState('');\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [avatar, setAvatar] = useState('');\r\n    const [twittername, setTwittername] = useState('');\r\n    const [showHideEmojiPicker, setShowHideEmojiPicker] = useState(false);\r\n    const [joined, setJoined] = useState('');\r\n    const [fileImg, setFileImg] = useState();\r\n    const [bio, setBio] = useState('');\r\n\r\n    const onEmojiClick = (event, emojiObject) => {\r\n    setTweet(`${tweet}${emojiObject.emoji}`)\r\n  };\r\n    \r\n    \r\n\r\n    const uploadFile = () => {\r\n        \r\n        inputFile.current.click();\r\n      };\r\n     \r\n\r\n\r\n    const setUserInfo = async() => {\r\n        console.log('func fired')\r\n        if (currUser) {\r\n            console.log('current user')\r\n        const uid = currUser.uid;\r\n        console.log(uid);\r\n        const currUserDb = await db.collection('users').where('userId', '==', uid).get();\r\n        console.log('userdata')\r\n        const udata = currUserDb.docs.map(user => user.data())[0];\r\n        if (udata) {\r\n        setAvatar(udata.avatar)\r\n        setUsername(udata.displayName);\r\n        setTwittername(udata.twittername);\r\n        setJoined(udata.joined)\r\n        if (udata.bio){\r\n        setBio(udata.bio)}\r\n        };\r\n        }\r\n    }  \r\n\r\n    useEffect(() => {\r\n        setUserInfo()\r\n    },[])\r\n     \r\n\r\n      const sendTweet = async(e) => {\r\n          e.preventDefault();\r\n         \r\n          let date = new Date();\r\n          let timeStamp = date.toJSON().slice(0,10).replace(/-/g,'/') + ' ' + date.toTimeString().split(' ')[0];\r\n          let imglink = '';\r\n          if (tweetImg) {\r\n            const storageRef = storage.ref();\r\n           \r\n            const imageRef = storageRef.child(fileImg.name);\r\n           \r\n            await imageRef.put(fileImg)\r\n           \r\n            imglink = await imageRef.getDownloadURL();\r\n            console.log(\"LINK TO FIREBASE IMAGE\")\r\n            console.log(imglink)\r\n          }\r\n\r\n        await db.collection('photos').add({\r\n            url: imglink,\r\n            userId: currUser.uid,\r\n            timeStamp\r\n        })  \r\n\r\n        await db.collection('tweets').add({\r\n            avatar: avatar,\r\n            displayName: username,\r\n            image: imglink,\r\n            text: tweet,\r\n            userId: currUser.uid,\r\n            userName: twittername, //@bla\r\n            verified: true,\r\n            likes: [],\r\n            retweets: [],\r\n            responses: [],\r\n            timeStamp,\r\n            children: [],\r\n            joined: joined,\r\n            bio: bio\r\n        });\r\n        \r\n        setTweetImg('');\r\n        setLink('');\r\n        setTweet('');\r\n        props.update('aaaa');\r\n      }\r\n      \r\n    const uploadImage = async(image) => {\r\n        if (image) {\r\n           \r\n            const storageRef = storage.ref();\r\n           \r\n            const imageRef = storageRef.child(image.name);\r\n           \r\n            await imageRef.put(image)\r\n           \r\n           const imglink = await imageRef.getDownloadURL();\r\n\r\n           console.log('LINK SET');\r\n           console.log(imglink)\r\n           \r\n           setLink(imglink);\r\n           \r\n          } else {\r\n            alert(\"Please upload an image first.\");\r\n          }\r\n\r\n      \r\n    }  \r\n\r\n    const handleFileUpload = e => {\r\n        const { files } = e.target;\r\n        \r\n        if (files && files.length) {\r\n            \r\n            const filename = files[0].name;\r\n            const parts = filename.split(\".\");\r\n            const fileType = parts[parts.length - 1];\r\n            if (fileType == 'PNG' || fileType == 'JPG' || fileType == 'JPEG' || fileType == 'png' || fileType == 'jpg' || fileType == 'jpeg') {\r\n                const url = URL.createObjectURL(files[0]);\r\n                setTweetImg(url);\r\n                console.log(files[0]);\r\n                setFileImg(files[0]);\r\n                \r\n                \r\n            }\r\n            \r\n        }\r\n        \r\n    }  \r\n\r\n    return (\r\n        <div className='tweetbox'>\r\n            <form>\r\n                <div className='tweetbox-input'>\r\n                    <Avatar src={avatar} />\r\n                    <input type='text' value={tweet} onChange={(e) => setTweet(e.target.value)} placeholder='Enter your tweet...' />\r\n                    \r\n                </div>\r\n                <div className='tweet-img'>\r\n                    {tweetImg && <img src={tweetImg} className='' />}\r\n                    </div>\r\n                <div className='tweetbox-submit-line'>\r\n                    <div className='media-submit-line'>\r\n                    <input type='file' id='file' name='image' ref={inputFile} style={{display: 'none'}} onChange={handleFileUpload}/>\r\n                       <span onClick={(e) => uploadFile(e)} className='media-submit-line'> <CropOriginalIcon  /> </span>\r\n                        <PollIcon />\r\n                        <span onClick={() => setShowHideEmojiPicker(!showHideEmojiPicker)} className='emoji-submit-line'> <InsertEmoticonIcon /> </span>\r\n                        <EventIcon />\r\n                    </div>\r\n                    <div className='tweet-btn-container'> <button className='tweet-btn' variant='outlined' onClick={(e) => sendTweet(e)} >Tweet </button></div>\r\n                    \r\n                </div>\r\n            </form>\r\n            {showHideEmojiPicker && <Picker onEmojiClick={onEmojiClick} />}\r\n        </div>\r\n    )\r\n}","import React, {useState, useEffect} from 'react';\r\nimport './post.css';\r\nimport {Avatar} from '@material-ui/core'\r\nimport { ChatBubbleOutline, FavoriteBorder, PublishOutlined, RepeatOutlined, VerifiedUserRounded } from '@material-ui/icons';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {db,firebaseApp} from './firebase';\r\nimport { adduserinfo } from './actions/adduserinfo';\r\n\r\nimport {useDispatch} from 'react-redux';\r\n\r\nexport default function Post({\r\n    displayName,\r\n    userName,\r\n    avatar,\r\n    verified,\r\n    timestamp,\r\n    text,\r\n    image,\r\n    timeStamp,\r\n    currUser,\r\n    update,\r\n    updatePost,\r\n    joined,\r\n    thisPostUserId,\r\n    bio\r\n}) {\r\n    const dispatch = useDispatch();\r\n    \r\n\r\n    const [likes, setLikes] = useState(0);\r\n    const [numberOfLikes, setNumberOflikes] = useState(0);\r\n    const [liked, setLiked] = useState();\r\n    const [numberOfRetweets, setNumberOfRetweets] = useState(0);\r\n    const [retweeted, setRetweeted] = useState();\r\n    const [isRetweet, setisRetweet] = useState();\r\n    const [retweetedBy, setRetweetedBy] = useState();\r\n    const [showreplybox, setShowreplybox] = useState(false);\r\n    const [reply, setReply] = useState('');\r\n    const [allReplies, setAllReplies] = useState([]);\r\n    const [linkToProfile, setLinkToProfile] = useState('');\r\n\r\n\r\n    useEffect(() => {\r\n        initialLikesCheck();\r\n        getData();\r\n        checkIfCurrent();\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        setLikes(likes => likes + 1);\r\n        console.log('post updated'); //simultaniously update all components !\r\n    },[updatePost]);\r\n\r\n    const checkIfCurrent = async() => {\r\n        const thispost = await db.collection('tweets').where('timeStamp', '==', timeStamp).get();\r\n        let thispostdata  = thispost.docs.map(doc => doc.data())[0];\r\n        \r\n        if (thispostdata.userId == currUser) {\r\n            setLinkToProfile('/profile')\r\n        } else {\r\n            setLinkToProfile('/otheruserprofile')\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const getData = async() => {\r\n        const thispost = await db.collection('tweets').where('timeStamp', '==', timeStamp).get();\r\n        let thispostdata  = thispost.docs.map(doc => doc.data())[0];\r\n        setisRetweet(thispostdata.retweet);\r\n        \r\n       \r\n        if (thispostdata.retweet) {\r\n            setRetweetedBy(thispostdata.retweetedBy)\r\n        }\r\n    }\r\n   \r\n\r\n    const initialLikesCheck = async() => {\r\n        const tweets = await db.collection('tweets').where('timeStamp', '==', timeStamp).get();\r\n        let mapped  = tweets.docs.map(doc => doc.data())[0];\r\n        \r\n        if (mapped && mapped.likes.length > 0) {\r\n            \r\n        const includes = mapped.likes.includes(currUser);\r\n        if (includes) {\r\n            \r\n            setLiked(true);       \r\n        } else {setLiked(false);}\r\n        setNumberOflikes(mapped.likes.length)\r\n    }\r\n    }\r\n   \r\n    const addLike = async() => {\r\n        const tweets = await db.collection('tweets').where('timeStamp', '==', timeStamp).get();\r\n       \r\n        \r\n        const id = tweets.docs[0].id\r\n        let mapped  = tweets.docs.map(doc => doc.data())[0];\r\n        \r\n\r\n        const includes = mapped.likes.includes(currUser);\r\n       \r\n        if (includes) {\r\n            const index =  mapped.likes.findIndex(e => e == currUser);\r\n            mapped.likes.splice(index, 1);\r\n            const add = await db.collection('tweets').doc(id).set(mapped);\r\n            \r\n            if (mapped.retweet) {\r\n                let parent;\r\n                const getParentId = await db.collection('tweets').doc(mapped.parent).get().then(doc => {\r\n                    parent = doc.data();\r\n                });\r\n                const index = parent.likes.findIndex(e => e == currUser);\r\n                parent.likes.splice(index, 1);\r\n               \r\n                const updateParent = await db.collection('tweets').doc(mapped.parent).set(parent);\r\n               \r\n            }\r\n            setLiked(false)\r\n        } else {\r\n            mapped.likes.push(currUser);\r\n            const add = await db.collection('tweets').doc(id).set(mapped);\r\n            if (mapped.retweet) {\r\n                let parent; \r\n                const getParentId = await db.collection('tweets').doc(mapped.parent).get().then(doc => {\r\n                    parent = doc.data();\r\n                });\r\n                parent.likes.push(currUser);\r\n                const updateParent = await db.collection('tweets').doc(mapped.parent).set(parent);\r\n            }\r\n\r\n            setLiked(true);\r\n        }\r\n\r\n\r\n        const tweetsNew = await db.collection('tweets').where('timeStamp', '==', timeStamp).get();\r\n        let numOfLikes = tweetsNew.docs.map(doc => doc.data())[0].likes.length;\r\n        setNumberOflikes(numOfLikes);\r\n       // update('aaa');\r\n    }\r\n\r\n\r\n   \r\n\r\n    const addRetweet = async() => {\r\n          \r\n          \r\n          const tweets = await db.collection('tweets').where('timeStamp', '==', timeStamp).get();\r\n          \r\n          let date = new Date();\r\n          let newTimeStamp = date.toJSON().slice(0,10).replace(/-/g,'/') + ' ' + date.toTimeString().split(' ')[0];\r\n\r\n\r\n        let mapped  = tweets.docs.map(doc => doc.data())[0];\r\n\r\n        const id = tweets.docs[0].id;\r\n        //ddd\r\n       \r\n\r\n\r\n\r\n        if (mapped.retweet) {\r\n            console.log('this is retweet!!!');\r\n            //if retweet ->\r\n            //1)add new post (child) with parents content\r\n            //2)  update users who retweeted (retweets) of a parent +\r\n            //3)  update children of a parent +\r\n            \r\n\r\n            const parentId = mapped.parent;\r\n\r\n            let parentdata;\r\n\r\n            const parent = await db.collection('tweets').doc(parentId).get().then((doc) => {\r\n                parentdata = doc.data();\r\n            })\r\n            //if this user did retweet already\r\n            if ( parentdata.retweets.includes(currUser) ) {\r\n                console.log('delete retweet')\r\n                //remove this user from parent\r\n                const thisuserindex = parentdata.retweets.findIndex(e => e == currUser);\r\n                parentdata.retweets.splice(thisuserindex, 1);\r\n                //remove child from parent\r\n                const childindex = parentdata.children.findIndex(e => e == id)\r\n                parentdata.children.splice(childindex, 1)\r\n                //update parent\r\n                const updateparent = await db.collection('tweets').doc(parentId).set(parentdata);\r\n                //remove element\r\n                const removeRetweet = await db.collection('tweets').doc(id).delete();\r\n            } else {\r\n\r\n            let childId;\r\n\r\n            const res = await db.collection('tweets').add({\r\n                ...parentdata,\r\n                retweetedBy: displayName,\r\n                timeStamp: newTimeStamp,\r\n                retweet: true\r\n            }).then(docRef => childId = docRef.id);\r\n\r\n            \r\n            \r\n           //\r\n\r\n            parentdata.retweets.push(currUser);\r\n\r\n            parentdata.children.push(id);\r\n            \r\n            const updateParent = await db.collection('tweets').doc(parentId).set(parentdata);\r\n\r\n            \r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        } else {\r\n            console.log('this is original tweet');\r\n            //if original tweet (parent)\r\n            //1) create new post with this doc content\r\n            //2) update this doc users who retweeted\r\n            //3) update this doc children\r\n\r\n            let childId;\r\n            //if this user did retweet already\r\n            if (mapped.retweets.includes(currUser)) {\r\n                //delete child\r\n                console.log('delete retweet');\r\n                //find all retweets\r\n                let thisretweet, retweetid;\r\n               const allRetweets = await db.collection('tweets').where('retweet', '==', true)\r\n               .where('userId', '==', currUser)\r\n               .where('parent', '==', id)\r\n               .get()\r\n\r\n              \r\n               thisretweet = allRetweets.docs.map(data => data.data())[0];\r\n\r\n               const allRetweetsId = await db.collection('tweets').where('retweet', '==', true)\r\n               .where('userId', '==', currUser)\r\n               .where('parent', '==', id).get().then(doc => {\r\n                  \r\n                   retweetid = doc.docs[0].id;\r\n               })\r\n                \r\n                //!\r\n            \r\n            ////remove user\r\n            const thisuserindex = mapped.retweets.findIndex(e => e == currUser);\r\n            mapped.retweets.splice(thisuserindex, 1);\r\n            //remove child from parent\r\n            const childindex = mapped.children.findIndex(e => e == id)\r\n            mapped.children.splice(childindex, 1)\r\n            //update this elem\r\n            const updatethiselem = await db.collection('tweets').doc(id).set(mapped);\r\n            //remove element\r\n            const removeRetweet = await db.collection('tweets').doc(retweetid).delete();\r\n\r\n\r\n            } else {\r\n            const res = await db.collection('tweets').add({\r\n                ...mapped,\r\n                retweetedBy: displayName,\r\n                parent: id,\r\n                timeStamp: newTimeStamp,\r\n                retweet: true\r\n            }).then(docRef => childId = docRef.id);\r\n\r\n            //updating this post data!!!\r\n         \r\n            mapped.children.push(childId);\r\n             mapped.retweets.push(currUser);\r\n\r\n            const updatethis =  await db.collection('tweets').doc(id).set(mapped);\r\n        }\r\n\r\n        }\r\n        update('aaa');\r\n    }\r\n\r\n    const addReply = async() => {\r\n\r\n        let date = new Date();\r\n          let newTimeStamp = date.toJSON().slice(0,10).replace(/-/g,'/') + ' ' + date.toTimeString().split(' ')[0];\r\n          const user = firebaseApp.auth().currentUser;\r\n          const currUserDb = await db.collection('users').where('userId', '==', currUser).get();\r\n          const udata = currUserDb.docs.map(user => user.data())[0];\r\n        \r\n\r\n        const thisTweet = await db.collection('tweets').where('timeStamp', '==', timeStamp).get();\r\n        \r\n        \r\n        const parentid = thisTweet.docs[0].id;\r\n        \r\n        let mappedParent  = thisTweet.docs.map(doc => doc.data())[0];\r\n        \r\n        let replyId;\r\n\r\n        await db.collection('tweets').add({\r\n            avatar: udata.avatar,\r\n            displayName: udata.displayName,\r\n            image: '',\r\n            text: reply,\r\n            userId: currUser,\r\n            userName: udata.twittername, //@bla\r\n            verified: true,\r\n            likes: [],\r\n            retweets: [],\r\n            responses: [],\r\n            timeStamp: newTimeStamp,\r\n            children: [],\r\n            isReply: true,\r\n            parent: parentid\r\n        }).then(docRef => replyId = docRef.id);\r\n\r\n        mappedParent.responses.push(replyId)\r\n\r\n        await db.collection('tweets').doc(parentid).set(mappedParent);\r\n    }\r\n\r\n    const getallReplies = async() => {\r\n        if (!showreplybox) {\r\n        const thisTweet = await db.collection('tweets').where('timeStamp', '==', timeStamp).get();\r\n        const parentid = thisTweet.docs[0].id;\r\n        let responcesIds  = thisTweet.docs.map(doc => doc.data())[0].responses;\r\n        let completeResponces = [];\r\n        for (let a = 0; a < responcesIds.length; a++ ) {\r\n            \r\n            let responce = await db.collection('tweets').doc(responcesIds[a]).get().then(doc => {\r\n                \r\n                completeResponces.push(doc.data());\r\n            });\r\n        }\r\n            \r\n        \r\n        \r\n\r\n        setAllReplies(completeResponces);\r\n    }\r\n        setShowreplybox(!showreplybox)\r\n\r\n    }\r\n\r\n    const adduserinfo = () => {\r\n        dispatch({type: 'ADD_USERINFO', payload: \r\n            [displayName,\r\n            userName,\r\n            avatar,\r\n            verified,\r\n            joined,\r\n            thisPostUserId,\r\n            bio ]})\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className='post' >\r\n            <div className='post-avatar'>\r\n                <Avatar src={avatar} />\r\n            </div>\r\n                <div className='post-body'>\r\n                    <div className='post-header'>\r\n                    {isRetweet&& <p>{retweetedBy} retweeted</p>}\r\n                    <Link to={linkToProfile}> <div className='header-text' onClick={() => adduserinfo()}>\r\n                          <h3>{displayName} <span>\r\n                                {verified&&<VerifiedUserRounded className='verified-icon' />}\r\n                                </span>   @{userName} · {timeStamp}\r\n                                \r\n                                </h3>\r\n                        </div></Link> \r\n                        <div className='post-headerdescription'>\r\n                            <p>{text}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className='post-img'>\r\n                        {image&&<img src={image} />}\r\n                    </div>\r\n                     <div className='footer-icons'> \r\n                      <span className='reply-span' onClick= {()=>getallReplies()}> {allReplies ? allReplies.length : 0} <ChatBubbleOutline fontSize='small' /> </span>\r\n\r\n                     <span className='retweet-span' onClick={() => addRetweet()}>{numberOfRetweets}<RepeatOutlined fontSize='small' style={{fill: retweeted&&'green'}}  /></span>   \r\n                    <span className='like-span' onClick={() => addLike()}> {numberOfLikes} {liked ? <FavoriteIcon fontSize='small' style={{fill: \"red\"}} /> :<FavoriteBorder fontSize='small' />} </span>\r\n                        <PublishOutlined fontSize='small' />\r\n                    </div>\r\n                    {showreplybox && \r\n                    <> \r\n                        <input type='text' placeholder='Your reply' className='reply-input' onChange={(e) => setReply(e.target.value)} /> \r\n                        <button className='reply-btn' onClick={() => addReply()}>Send</button> \r\n                        <ul>\r\n                            \r\n                            {allReplies.map(e => {\r\n                               \r\n                               return (<div className='post' >\r\n                               <div className='post-avatar'>\r\n                                   <Avatar src={e.avatar} />\r\n                               </div>\r\n                                   <div className='post-body'>\r\n                                       <div className='post-header'>\r\n                                       {e.isRetweet&& <p>{retweetedBy} retweeted</p>}\r\n                                           <div className='header-text'>\r\n                                               <h3>{e.displayName} <span>\r\n                                                   {e.verified&&<VerifiedUserRounded className='verified-icon' />}\r\n                                                   </span>   @{e.userName} · {e.timeStamp}\r\n                                                   \r\n                                                   </h3>\r\n                                           </div>\r\n                                           <div className='post-headerdescription'>\r\n                                               <p>{e.text}</p>\r\n                                           </div>\r\n                                       </div>\r\n                                       \r\n                                   </div>\r\n                               </div>)\r\n                            })}\r\n                        </ul>\r\n                    </>\r\n                        }\r\n                </div>\r\n                \r\n        </div>\r\n\r\n        \r\n    )\r\n}","import React, {useState, useEffect} from 'react';\r\nimport './feed.css';\r\nimport TweetBox from './tweetbox';\r\nimport Post from './post';\r\nimport { db, firebaseApp} from './firebase';\r\nimport {useSelector} from 'react-redux';\r\nimport props from 'prop-types';\r\nimport {store} from './index';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nexport default function Feed() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const Store = store;\r\n    \r\n    const  select = (state) => {\r\n        return state.update\r\n      }\r\n\r\n\r\n      let currentValue;\r\n      const [update, setUpdate] = useState();\r\n\r\n\r\n    const handleChangeStore = () => {\r\n        let previousValue = currentValue\r\n        currentValue = select(Store.getState());\r\n        if (previousValue !== currentValue) {\r\n            getPosts()\r\n          }\r\n        }\r\n\r\n        const unsubscribe = Store.subscribe(handleChangeStore)\r\n    \r\n    const currUser = firebaseApp.auth().currentUser;\r\n    const [posts, setPosts] = useState([]);\r\n    const [updateChild, setupdateChild] = useState(0);\r\n    \r\n\r\n    function handleChange() {\r\n        getPosts();\r\n        console.log('got posts!!');\r\n    }\r\n\r\n\r\n    const getPosts = async() => {\r\n        const snapshot = await db.collection('tweets').get().then(snapshot => {\r\n            let tweets  = snapshot.docs.map(doc => doc.data());\r\n            const currUserId = firebaseApp.auth().currentUser.uid;\r\n            const currUserDb = db.collection('users').where('userId', '==', currUserId).get().then(res => {\r\n                const currUserDbMapped = res.docs.map(doc => doc.data())[0];\r\n                const following = currUserDbMapped.following;\r\n\r\n               \r\n                tweets = tweets.map(e => {\r\n                    if (following.includes(e.userId) || e.userId == currUserId) {\r\n                        \r\n                        return e;\r\n                    } else return false;\r\n                }).filter(e => e)\r\n                setPosts(tweets);\r\n\r\n                });\r\n            \r\n        })\r\n        }\r\n    \r\n\r\n    useEffect(() => {\r\n      getPosts();\r\n      unsubscribe();\r\n      dispatch({type: 'USERID', payload: firebaseApp.auth().currentUser.uid })\r\n\r\n\r\n\r\n    }, []);\r\n\r\n    \r\n\r\n    return (\r\n        <div className='feed'>\r\n            <div className='feed-header'>\r\n                <h2>Home</h2>\r\n            </div>\r\n\r\n            <TweetBox update={handleChange} />\r\n            {posts.map(e => {\r\n                \r\n                return (\r\n                    \r\n                    <Post update={handleChange} \r\n                    updatePost={posts}\r\n            text={e.text} \r\n            displayName={e.displayName}\r\n    userName={e.userName}\r\n    avatar={e.avatar}\r\n    verified={e.verified}\r\n    timeStamp={e.timeStamp}\r\n    text={e.text}\r\n    image={e.image}\r\n    likes={e.likes}\r\n    retweets={e.retweets}\r\n    responses={e.responses}\r\n    currUser={currUser.uid}\r\n    retweeted= {e.retweet ? true : false}\r\n    joined = {e.joined}\r\n    thisPostUserId={e.userId}\r\n    bio={e.bio? e.bio : ''}\r\n    />\r\n            \r\n                )\r\n            })}\r\n            \r\n            Feed\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {firebaseApp, db} from './firebase';\r\nimport {useDispatch} from 'react-redux';\r\nimport './shortuserwidget.css';\r\n\r\n\r\n\r\nexport default function ShortUserWidget({\r\n    displayName,\r\n    twittername,\r\n    avatar,\r\n    userId\r\n}) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [followed, setFollowed] = useState(false);\r\n\r\n    const addRemoveFollow = async() => {\r\n        const user = await db.collection('users').where('userId', '==', userId).get();\r\n       \r\n        const otherUserDocId = user.docs[0].id;\r\n        const mappedUser = user.docs.map(doc => doc.data())[0];\r\n       \r\n        const currUserId = firebaseApp.auth().currentUser.uid;\r\n        const addFollowing = await db.collection('users').where('userId', '==', currUserId).get();\r\n        const currUserDocId = addFollowing.docs[0].id;\r\n        const mappedCurrentUser = addFollowing.docs.map(doc => doc.data())[0];\r\n        console.log('initial current user');\r\n        console.log(mappedCurrentUser);\r\n        if ( mappedUser.followers.includes(currUserId) ) {\r\n           const index = mappedUser.followers.findIndex(e => e == currUserId);\r\n           console.log('INDEXS')\r\n            console.log(index)\r\n            mappedUser.followers.splice(index, 1);\r\n            const index2 = mappedCurrentUser.following.findIndex(e => e== userId);\r\n            mappedCurrentUser.following.splice(index2, 1);\r\n            setFollowed(false);\r\n            \r\n        } else {\r\n            mappedUser.followers.push(currUserId);\r\n            mappedCurrentUser.following.push(userId);\r\n            setFollowed(true);\r\n        }\r\n\r\n        console.log('current user changed');\r\n        console.log(mappedCurrentUser);\r\n\r\n        console.log('other user changed');\r\n        console.log(mappedUser)\r\n\r\n\r\n        const addFollower = await db.collection('users').doc(otherUserDocId).set(mappedUser);\r\n        const addFollowingtoDb = await db.collection('users').doc(currUserDocId).set(mappedCurrentUser);\r\n\r\n        dispatch({type: 'UPDATE', payload: 'abc'});\r\n    }\r\n    return (\r\n        <div className='shortuser-widget'>\r\n            <div className='shortuser-avatar-text'>\r\n            <div className='shortuser-avatar-container'>\r\n                <Avatar src={avatar} />\r\n            </div>\r\n            <div className='shortuser-text-container'>\r\n                <div><strong>{displayName}</strong></div>\r\n                <div>@{twittername}</div>\r\n            </div>\r\n            </div>\r\n            <div className='shortuser-button-container'>\r\n                <button className='shortuser-btn' onClick={() =>  addRemoveFollow()}>{followed ? 'Unfollow' : 'Follow'}</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport './widgets.css';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {TwitterTimelineEmbed, TwitterShareButton, TwitterTweetEmbed} from 'react-twitter-embed';\r\nimport {firebaseApp, db} from './firebase';\r\nimport ShortUserWidget from './shortuserwidget';\r\nimport {useSelector } from 'react-redux';\r\nimport {store} from './index';\r\n\r\nexport default function Widgets({userIdForImg}) {\r\n\r\n    \r\n\r\n    const [images, setImages] = useState([]);\r\n\r\n    const [suggestUsers, setSuggestUsers] = useState([]);\r\n\r\n    const suggestions = async() => {\r\n        const currUserId = firebaseApp.auth().currentUser.uid;\r\n        const currUserNotFollowed = await db.collection('users').get();\r\n        const currUserNotFollowedMapped = currUserNotFollowed.docs.map(e => e.data());\r\n        \r\n       const suggestions = currUserNotFollowedMapped.filter(e => e.userId != currUserId && !e.followers.includes(currUserId));\r\n      \r\n       setSuggestUsers(suggestions)\r\n    };\r\n\r\n    const getImages = async() => {\r\n       console.log('USER ID FOR IMG IN WIDGETS');\r\n       console.log(userIdForImg)\r\n        const imagesDb = await db.collection('photos').get();\r\n        const imagesDbMapped = imagesDb.docs.map(e => e.data());\r\n        const imagesFiltered = imagesDbMapped.filter(e => e.userId == userIdForImg).slice(0,5);\r\n        console.log('IMAGES');\r\n        console.log(imagesFiltered)\r\n        setImages(imagesFiltered)\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        suggestions();\r\n        getImages();\r\n    },[])\r\n    return (\r\n        <div className='widgets'>\r\n            <div className='widgets-input'>\r\n                <SearchIcon className='widgets-search' />\r\n                <input placeholder='Search Twitter' type='text' />\r\n                <div className='image-grid'>\r\n                    <div className='image-line'>\r\n                        <img className='grid-img grid-img-left-up' src={images[0]?.url} />\r\n                        <img className='grid-img'  src={images[1]?.url} />\r\n                        <img className='grid-img'  src={images[2]?.url} />\r\n                    </div>\r\n                    <div className='image-line'>\r\n                        <img className='grid-img'  src={images[3]?.url} />\r\n                        <img className='grid-img'   src={images[4]?.url} />\r\n                        <img  className='grid-img' src={images[5]?.url} />\r\n                    </div>\r\n                </div>\r\n                <div className='suggestions'>\r\n                    <div className='suggestions-header-container'>\r\n                        <h2 className='suggestions-header'>You might like</h2>\r\n                    </div>\r\n                    {suggestUsers.map(e => {\r\n                        \r\n                        return (\r\n                            <ShortUserWidget \r\n                     displayName={e.displayName}\r\n                    twittername={e.twittername}\r\n                    avatar={e.avatar}\r\n                    userId={e.userId}\r\n                    \r\n                    />\r\n                        )\r\n                    })}\r\n                </div>\r\n                <TwitterShareButton />\r\n                </div>    \r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport './login.css';\r\nimport {firebaseApp} from './firebase';\r\n\r\n\r\nexport default function RegisterForm() {\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [err, setErr] = useState('');\r\n\r\n\r\n    const auth = firebaseApp.auth();\r\n\r\n    const register = async() => {\r\n        try {\r\n        const createUser = await auth.createUserWithEmailAndPassword(email, password);\r\n        \r\n        setErr('You have registered succesfully. Now we will redirect you to the next step of the registration process...');\r\n        setTimeout(()=>history.push('/registertwo'), 3000);\r\n        } catch(err) {\r\n            const errmessage = await err.message;\r\n            setErr(errmessage);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='login'>\r\n            <div className='twitter-sign'>\r\n                <TwitterIcon className='twitter-icon'/>\r\n            </div>\r\n            <div className='twitter-login-text'>\r\n                Register in ReacTwitter\r\n            </div>\r\n            {err&&<p>{err}</p>}\r\n            <div className='login-email'>\r\n                <input type='text' placeholder='Your e-mail' onChange={(e) => setEmail(e.target.value)}/>\r\n            </div>\r\n            <div className='login-password'>\r\n                <input type='password' placeholder='Your password' onChange={(e) => setPassword(e.target.value)} />\r\n            </div>\r\n            <div className='login-btn-form'>\r\n                <button className='login-btn-form-btn' onClick={() => register()}>Register</button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}","import React, {useState, useRef} from 'react';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport {Avatar, Button} from '@material-ui/core';\r\nimport './login.css';\r\nimport {storage, db, firebaseApp} from './firebase';\r\n\r\n\r\nexport default function RegisterTwo() {\r\n    const history = useHistory();\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [avatar, setAvatar] = useState('');\r\n    const [err, setErr] = useState('');\r\n    const [twittername, setTwittername] = useState('');\r\n\r\n    const inputFile = useRef(null);\r\n    const auth = firebaseApp.auth();\r\n\r\n    const uploadFile = () => {\r\n        \r\n        inputFile.current.click();\r\n      };\r\n\r\n      const uploadImage = async(image) => {\r\n        if (image) {\r\n           \r\n            const storageRef = storage.ref();\r\n           \r\n            const imageRef = storageRef.child(image.name);\r\n           \r\n            await imageRef.put(image)\r\n           \r\n           const imglink = await imageRef.getDownloadURL();\r\n           \r\n           setAvatar(imglink);\r\n           \r\n          } else {\r\n            alert(\"Please upload an image first.\");\r\n          }\r\n\r\n      \r\n    } \r\n\r\n      const handleFileUpload = e => {\r\n        const { files } = e.target;\r\n        if (files && files.length) {\r\n            const filename = files[0].name;\r\n            const parts = filename.split(\".\");\r\n            const fileType = parts[parts.length - 1];\r\n            if (fileType == 'PNG' || fileType == 'JPG' || fileType == 'JPEG' || fileType == 'png' || fileType == 'jpg' || fileType == 'jpeg') {\r\n                const url = URL.createObjectURL(files[0]);\r\n                setAvatar(url);\r\n                uploadImage(files[0])\r\n                \r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n\r\n\r\n    const register = async() => {\r\n\r\n        const currentUser = await firebaseApp.auth().currentUser;\r\n\r\n        if (currentUser) {\r\n            await currentUser.updateProfile({\r\n                displayName: username\r\n            });\r\n\r\n            await firebaseApp.firestore().collection('users').add({\r\n                userId: currentUser.uid,\r\n                avatar: avatar,\r\n                displayName: username,\r\n                twittername,\r\n                joined:  `${new Date().getMonth()+1}/${new Date().getFullYear()}`,\r\n                followers: [],\r\n                following: []\r\n            });\r\n\r\n            history.push('/dashboard')\r\n    }\r\n    }\r\n\r\n    return (\r\n        <div className='login'>\r\n            <div className='twitter-sign'>\r\n                <TwitterIcon className='twitter-icon'/>\r\n            </div>\r\n            <div className='twitter-login-text'>\r\n                Submit your information\r\n            </div>\r\n            {err&&<p>{err}</p>}\r\n            <div className='login-email'>\r\n                <input type='text' placeholder='Your name' onChange={(e) => setTwittername(e.target.value)}/>\r\n            </div>\r\n            <div className='login-email'>\r\n                <input type='text' placeholder='Your usename' onChange={(e) => setUsername(e.target.value)}/>\r\n            </div>\r\n            <div className='avatar-line'>\r\n                <div className='avatar-img'>{avatar ? <Avatar className='avatar-elem' src={avatar} /> : <Avatar  className='avatar-elem' />}</div>\r\n                <div className='choose-avatar-text'>Choose your profile picture</div>\r\n                <button onClick={() => uploadFile()} className='upload-avatar-btn'>Upload</button>\r\n                <input type='file' id='file' name='image' ref={inputFile} style={{display: 'none'}} onChange={handleFileUpload}/>\r\n            </div>\r\n            <div className='login-btn-form'>\r\n                <button className='login-btn-form-btn' onClick={() => register()}>Go to Dashboard</button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState, useRef } from 'react';\r\nimport Sidebar from './sidebar';\r\nimport Feed from './feed';\r\nimport Widgets from './widgets';\r\n\r\nimport './profile.css';\r\nimport { Avatar } from '@material-ui/core';\r\nimport {storage, db, firebaseApp} from './firebase';\r\nimport Post from './post';\r\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\r\nimport Modal from 'react-modal';\r\n\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport { NextWeek } from '@material-ui/icons';\r\n\r\nexport default function Profile() {\r\n\r\n    const tab1Ref = useRef(null);\r\n    const tab2Ref = useRef(null);\r\n    const tab3Ref = useRef(null);\r\n    \r\n    const tab4Ref=useRef(null);\r\n\r\n    const tab1 = useRef(null);\r\n    const tab2 = useRef(null);\r\n    const tab3 = useRef(null);\r\n    const tab4 = useRef(null);\r\n\r\n    const inputFile = useRef(null);\r\n\r\n    const [avatar, setAvatar] = useState('');\r\n    const [displayName, setDisplayName] = useState('');\r\n    const [twitterName, setTwitterName] = useState('');\r\n    const [alltweets, setAllTweets] = useState([]);\r\n    const [myTweets, setMyTweets] = useState([]);\r\n    const [thisuserId, setthisUserId] = useState('');\r\n    const [currentTab, setCurrentTab] = useState(1);\r\n    const [joined, setJoined] = useState('');\r\n    const [myLikes, setMyLikes] = useState([]);\r\n    const [tweetsWithMedia, setTweetsWithMedia] = useState([]);\r\n    const [numberOfFollowers, setNumberOfFollowers] = useState(0);\r\n    const [numberOfFollowing, setNumberOfFollowing] = useState(0);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [avatarChanged, setAvatarChanged] = useState('');\r\n    const [modalText, setModalText] = useState('Have a favorite selfie? Upload it now.');\r\n    const [modalHeaderText, setModalHeaderText ] = useState('Pick a profile picture');\r\n    const [avatarStep, setAvatarStep] = useState(true); \r\n    const [myBio, changeMyBio] = useState('');\r\n\r\n    const uploadFile = () => {\r\n        \r\n        inputFile.current.click();\r\n      };\r\n\r\n      const uploadImage = async(image) => {\r\n        if (image) {\r\n           \r\n            const storageRef = storage.ref();\r\n           \r\n            const imageRef = storageRef.child(image.name);\r\n           \r\n            await imageRef.put(image)\r\n           \r\n           const imglink = await imageRef.getDownloadURL();\r\n           \r\n           setAvatarChanged(imglink);\r\n\r\n           const currUserId = firebaseApp.auth().currentUser.uid;\r\n\r\n           const currUserEntry = await db.collection('users').where('userId', '==', currUserId).get();\r\n         \r\n          const entryId = currUserEntry.docs[0].id;\r\n\r\n           const currUserEntryMapped = currUserEntry.docs.map(docs => docs.data())[0];\r\n\r\n           currUserEntryMapped.avatar = imglink;\r\n\r\n           const changeAvatar = await db.collection('users').doc(entryId).set(currUserEntryMapped);\r\n\r\n           \r\n          } else {\r\n            alert(\"Please upload an image first.\");\r\n          }\r\n\r\n      \r\n    } \r\n\r\n      const handleFileUpload = e => {\r\n        const { files } = e.target;\r\n        if (files && files.length) {\r\n            const filename = files[0].name;\r\n            const parts = filename.split(\".\");\r\n            const fileType = parts[parts.length - 1];\r\n            if (fileType == 'PNG' || fileType == 'JPG' || fileType == 'JPEG' || fileType == 'png' || fileType == 'jpg' || fileType == 'jpeg') {\r\n                const url = URL.createObjectURL(files[0]);\r\n                setAvatarChanged(url);\r\n                uploadImage(files[0])\r\n                \r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    const getCurrUserData = async() => {\r\n        if (firebaseApp.auth()) {\r\n    const currUser = await firebaseApp.auth().currentUser\r\n    \r\n    \r\n    const userId = currUser.uid;\r\n    setthisUserId(userId);\r\n    const currUserDb = await db.collection('users').where('userId', '==', userId).get();\r\n    const currUserDbMapped = currUserDb.docs.map(doc => doc.data())[0];\r\n    setAvatar(currUserDbMapped.avatar);\r\n    setDisplayName(currUserDbMapped.displayName);\r\n    setTwitterName(currUserDbMapped.twittername);\r\n    setJoined(currUserDbMapped.joined)\r\n    const currUserTweetsDb = await db.collection('tweets').where('userId', '==', userId).get();\r\n    const currUserTweetsDbMapped = currUserTweetsDb.docs.map(doc => doc.data());\r\n    setAllTweets(currUserTweetsDbMapped);\r\n\r\n    const my = currUserTweetsDbMapped.filter(e => !e.isReply);\r\n    setMyTweets(my);\r\n\r\n    const currUserLikesDb =  await db.collection('tweets').get();\r\n    const currUserLikesDbMapped = currUserLikesDb.docs.map(doc => doc.data()).filter(e => e.likes.includes(userId));\r\n    \r\n    setMyLikes(currUserLikesDbMapped);\r\n\r\n    const currUserTweetsWithMedia = currUserTweetsDb.docs.map(doc => doc.data()).filter(e => e.image);\r\n    setTweetsWithMedia(currUserTweetsWithMedia);\r\n\r\n\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCurrUserData();\r\n        initialCheckFollow();\r\n    }, []);\r\n\r\n    const initialCheckFollow = async() => {\r\n\r\n        const currentUserId = await firebaseApp.auth().currentUser.uid;\r\n\r\n        const currentUserDb = await db.collection('users').where('userId', '==', currentUserId).get();\r\n\r\n        const currUserDbMapped = currentUserDb.docs.map(doc => doc.data())[0];\r\n\r\n        setNumberOfFollowing(currUserDbMapped.following.length);\r\n        setNumberOfFollowers(currUserDbMapped.followers.length);\r\n\r\n        if (currUserDbMapped.bio) {\r\n            changeMyBio(currUserDbMapped.bio)\r\n        }\r\n        \r\n    }\r\n\r\n    const switchTab = num => {\r\n        setCurrentTab(num); \r\n        if (num == 1) {\r\n            tab1Ref.current.className = 'visible-tab';\r\n            tab2Ref.current.className = 'invisible-tab';\r\n            tab3Ref.current.className = 'invisible-tab';\r\n            tab4Ref.current.className = 'invisible-tab';\r\n\r\n            tab1.current.className = 'tweets-tweets-active';\r\n            tab2.current.className ='tweets-tweets-nonactive';\r\n            tab3.current.className ='tweets-tweets-nonactive';\r\n            tab4.current.className= 'tweets-tweets-nonactive'\r\n\r\n        } else if (num == 2) {\r\n            tab1Ref.current.className = 'invisible-tab';\r\n            tab2Ref.current.className = 'visible-tab';\r\n            tab3Ref.current.className = 'invisible-tab';\r\n            tab4Ref.current.className = 'invisible-tab';\r\n\r\n            tab1.current.className = 'tweets-tweets-nonactive';\r\n            tab2.current.className ='tweets-tweets-active';\r\n            tab3.current.className ='tweets-tweets-nonactive';\r\n            tab4.current.className= 'tweets-tweets-nonactive'\r\n        } else if (num == 3) {\r\n            tab1Ref.current.className = 'invisible-tab';\r\n            tab2Ref.current.className = 'invisible-tab';\r\n            tab3Ref.current.className = 'visible-tab';\r\n            tab4Ref.current.className = 'invisible-tab';\r\n\r\n            tab1.current.className = 'tweets-tweets-nonactive';\r\n            tab2.current.className ='tweets-tweets-nonactive';\r\n            tab3.current.className ='tweets-tweets-active';\r\n            tab4.current.className= 'tweets-tweets-nonactive'\r\n        }\r\n\r\n        else if (num == 4) {\r\n            tab1Ref.current.className = 'invisible-tab';\r\n            tab2Ref.current.className = 'invisible-tab';\r\n            tab3Ref.current.className = 'invisible-tab';\r\n            tab4Ref.current.className = 'visible-tab';\r\n\r\n            tab1.current.className = 'tweets-tweets-nonactive';\r\n            tab2.current.className ='tweets-tweets-nonactive';\r\n            tab3.current.className ='tweets-tweets-nonactive';\r\n            tab4.current.className= 'tweets-tweets-active'\r\n        }\r\n    }\r\n\r\n    const next = () => {\r\n        setModalHeaderText('Describe yourself');\r\n        setModalText('What makes you special? Dont think too hard, just have fun with it.')\r\n        setAvatarStep(false);\r\n    }\r\n\r\n    const saveBio = async() => {\r\n        const currUserId = firebaseApp.auth().currentUser.uid;\r\n\r\n        const currUserEntry = await db.collection('users').where('userId', '==', currUserId).get();\r\n      \r\n       const entryId = currUserEntry.docs[0].id;\r\n\r\n        const currUserEntryMapped = currUserEntry.docs.map(docs => docs.data())[0];\r\n\r\n        currUserEntryMapped.bio = myBio;\r\n\r\n        const changeBio = await db.collection('users').doc(entryId).set(currUserEntryMapped);\r\n\r\n        setShowModal(false);\r\n    }\r\n    \r\n\r\n    return (\r\n        <>\r\n        <Modal \r\n        className=\"Modal\"\r\n        overlayClassName=\"Overlay\"\r\n           isOpen={showModal}\r\n           contentLabel=\"Minimal Modal Example\"\r\n        >\r\n            <div className='modal'>\r\n                <div className='modal-header'>\r\n                    <div className='twitter-icon-modal'>\r\n                        <TwitterIcon />\r\n                    </div>\r\n                    <div className='modal-text-bold'>\r\n                        <h1>{modalHeaderText}</h1>\r\n                    </div>\r\n                    <div className='modal-text'>\r\n                        <p>{modalText}</p>\r\n                        {!avatarStep && <>{myBio.length} / 160 </>  } \r\n                    </div>\r\n                    <div className='modal-content-avatar'>\r\n                        {avatarStep ? <><Avatar src={avatarChanged} onClick={() => uploadFile()} />\r\n                        <input type='file' id='file' name='image' ref={inputFile} style={{display: 'none'}} onChange={handleFileUpload}/> </> :\r\n                       <>  <br /> <input type='text' className='modal-bio-text' value={myBio} maxLength={160} onChange={(e) => changeMyBio(e.target.value) }/> </>\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='close-btn-container'>\r\n            <button onClick={() => setShowModal(false)} className='close-modal-btn'>Close</button>\r\n           {avatarStep ? <button onClick={() => next()} className='close-modal-btn'>Next</button> :\r\n           <button onClick={() => saveBio()} className='close-modal-btn'>Save and close</button>\r\n           }\r\n            </div>\r\n          \r\n        </Modal>\r\n        <div className='profile'> \r\n        \r\n\r\n            <Sidebar />\r\n                <div className='profile-col'>\r\n                    <div className='profile-header-profile'>\r\n                        \r\n                        <Avatar src={avatar} className='avatar-large' />\r\n\r\n                        <div className='profile-info'>\r\n                            <div className='profile-up'>\r\n                                <div className='profile-names'>\r\n                            <div className='displayname-profile'>{displayName}</div> \r\n                            <div className='twittername-profile'>@{twitterName}</div> \r\n                            </div>\r\n                            <div className='editbtn'> <button className='edit-profile-btn' onClick={() => setShowModal(true)}>Edit profile</button></div>\r\n                           \r\n                            </div>\r\n                            <div className='joined-profile'><CalendarTodayIcon className='inline-icon' />  Joined {joined}</div>\r\n                            <div className='following-followers-profile'> <strong>{numberOfFollowing}</strong> following <strong>{numberOfFollowers}</strong> Followers</div>\r\n                            <div className='bio-profile'>{myBio}</div>\r\n                            \r\n                        \r\n                           \r\n                        </div>\r\n\r\n                        \r\n\r\n                        \r\n                        <div className='select-profile'>\r\n                            <div className='tweets-tweets select-profile-item tweets-tweets-active' ref={tab1} onClick={() => switchTab(1)}> Tweets </div>\r\n                            <div className='tweets-replies select-profile-item' ref={tab2} onClick={() => switchTab(2)}>Tweets & replies</div>\r\n                            <div className='tweets-media select-profile-item' ref={tab3} onClick={() => switchTab(3)}> Media</div>\r\n                            <div className='tweets-likes select-profile-item' ref={tab4} onClick={() => switchTab(4)}>Likes</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='ss'>\r\n                    <div id='1' ref={tab1Ref} className='visible-tab profile-col-scroll'>\r\n                   {myTweets.map(e => {\r\n                       return (\r\n                        \r\n                        \r\n                                        <Post \r\n                                        \r\n                                text={e.text} \r\n                                displayName={e.displayName}\r\n                        userName={e.userName}\r\n                        avatar={e.avatar}\r\n                        verified={e.verified}\r\n                        timeStamp={e.timeStamp}\r\n                        text={e.text}\r\n                        image={e.image}\r\n                        likes={e.likes}\r\n                        retweets={e.retweets}\r\n                        responses={e.responses}\r\n                        currUser={thisuserId}\r\n                        retweeted= {e.retweet ? true : false}\r\n                        />\r\n                       )\r\n                   })}\r\n                   </div>\r\n                    <div id='2' ref={tab2Ref} className='invisible-tab'>\r\n                   {alltweets.map(e => {\r\n                       return (\r\n                                        <Post \r\n                                        \r\n                                text={e.text} \r\n                                displayName={e.displayName}\r\n                        userName={e.userName}\r\n                        avatar={e.avatar}\r\n                        verified={e.verified}\r\n                        timeStamp={e.timeStamp}\r\n                        text={e.text}\r\n                        image={e.image}\r\n                        likes={e.likes}\r\n                        retweets={e.retweets}\r\n                        responses={e.responses}\r\n                        currUser={thisuserId}\r\n                        retweeted= {e.retweet ? true : false}\r\n                        />\r\n                       )\r\n                   })}\r\n                   </div>\r\n\r\n                   <div id='3' ref={tab3Ref} className='invisible-tab'>\r\n                    {\r\n                        tweetsWithMedia.map(e => {\r\n                            return (\r\n                                <Post \r\n                                text={e.text} \r\n                                displayName={e.displayName}\r\n                        userName={e.userName}\r\n                        avatar={e.avatar}\r\n                        verified={e.verified}\r\n                        timeStamp={e.timeStamp}\r\n                        text={e.text}\r\n                        image={e.image}\r\n                        likes={e.likes}\r\n                        retweets={e.retweets}\r\n                        responses={e.responses}\r\n                        currUser={thisuserId}\r\n                        retweeted= {e.retweet ? true : false}\r\n                        />\r\n                            )\r\n                        })\r\n                    }\r\n                   </div>\r\n\r\n                   <div id='4' ref={tab4Ref} className='invisible-tab' >\r\n                   {myLikes.map(e => {\r\n                       return (\r\n                                        <Post \r\n                                        \r\n                                text={e.text} \r\n                                displayName={e.displayName}\r\n                        userName={e.userName}\r\n                        avatar={e.avatar}\r\n                        verified={e.verified}\r\n                        timeStamp={e.timeStamp}\r\n                        text={e.text}\r\n                        image={e.image}\r\n                        likes={e.likes}\r\n                        retweets={e.retweets}\r\n                        responses={e.responses}\r\n                        currUser={thisuserId}\r\n                        retweeted= {e.retweet ? true : false}\r\n                        />\r\n                       )\r\n                   })}\r\n                   </div>\r\n                   </div>\r\n                </div>\r\n          <Widgets userIdForImg={firebaseApp.auth().currentUser.uid} />\r\n        </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState, useRef } from 'react';\r\nimport Sidebar from './sidebar';\r\nimport Feed from './feed';\r\nimport Widgets from './widgets';\r\n\r\nimport './otheruserprofile.css';\r\nimport { Avatar } from '@material-ui/core';\r\nimport {db, firebaseApp} from './firebase';\r\nimport Post from './post';\r\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\n\r\nexport default function OtherUserProfile() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const tab1Ref = useRef(null);\r\n    const tab2Ref = useRef(null);\r\n    const tab3Ref = useRef(null);\r\n    const tab4Ref=useRef(null);\r\n\r\n    const tab1 = useRef(null);\r\n    const tab2 = useRef(null);\r\n    const tab3 = useRef(null);\r\n\r\n    const tab4 = useRef(null);\r\n\r\n    const [avatar, setAvatar] = useState('');\r\n    const [displayName, setDisplayName] = useState('');\r\n    const [twitterName, setTwitterName] = useState('');\r\n    const [joined, setJoined] = useState('');\r\n    const [followed, setFollowed] = useState('');\r\n    const [numberOfFollowers, setNumberOfFollowers] = useState(0);\r\n    const [numberOfFollowing, setNumberOfFollowing] = useState(0);\r\n    const [myLikes, setMyLikes] = useState([]);\r\n    const [tweetsWithMedia, setTweetsWithMedia] = useState([]);\r\n    const [myBio, changeMyBio] = useState('');\r\n\r\n\r\n    const user = useSelector(state => state.userInfo);\r\n\r\n    const recieveUserInfo = () => {\r\n        console.log('user from redfux');\r\n        console.log(user);\r\n        setAvatar(user[2]);\r\n        setDisplayName(user[1]);\r\n        setTwitterName(user[0]);\r\n        setJoined(user[4]);\r\n        setUserId(user[5]);\r\n        initialCheckFollow(user[5]);\r\n        getCurrUserData(user[5]);\r\n        changeMyBio(user[6]);\r\n        dispatch({type: 'USERID', payload: user[5]})\r\n    }\r\n\r\n    useEffect(() => {\r\n        recieveUserInfo();\r\n        \r\n    },[])\r\n\r\n    \r\n    const [allusertweets, setAlluserTweets] = useState([]);\r\n    const [userTweets, setUserTweets] = useState([]);\r\n    const [thisuserId, setthisUserId] = useState('');\r\n    const [currentTab, setCurrentTab] = useState(1);\r\n    const [userId, setUserId] = useState('');\r\n    // const [joined, setJoined] = useState('');\r\n    const [alltweets, setAllTweets] = useState([]);\r\n    const [myTweets, setMyTweets] = useState([]);\r\n\r\n    const getCurrUserData = async(userId) => {\r\n        if (firebaseApp.auth()) {\r\n    \r\n    const currUserDb = await db.collection('users').where('userId', '==', userId).get();\r\n    const currUserDbMapped = currUserDb.docs.map(doc => doc.data())[0];\r\n    \r\n    const currUserTweetsDb = await db.collection('tweets').where('userId', '==', userId).get();\r\n    const currUserTweetsDbMapped = currUserTweetsDb.docs.map(doc => doc.data());\r\n    setAllTweets(currUserTweetsDbMapped);\r\n\r\n    const my = currUserTweetsDbMapped.filter(e => !e.isReply);\r\n    setMyTweets(my);\r\n\r\n    const currUserLikesDb =  await db.collection('tweets').get();\r\n    const currUserLikesDbMapped = currUserLikesDb.docs.map(doc => doc.data()).filter(e => e.likes.includes(userId));\r\n    \r\n    setMyLikes(currUserLikesDbMapped);\r\n\r\n    const currUserTweetsWithMedia = currUserTweetsDb.docs.map(doc => doc.data()).filter(e => e.image);\r\n    setTweetsWithMedia(currUserTweetsWithMedia);\r\n\r\n        }\r\n    }\r\n\r\n   \r\n\r\n    const addRemoveFollow = async() => {\r\n        const user = await db.collection('users').where('userId', '==', userId).get();\r\n       \r\n        const otherUserDocId = user.docs[0].id;\r\n        const mappedUser = user.docs.map(doc => doc.data())[0];\r\n       \r\n        const currUserId = firebaseApp.auth().currentUser.uid;\r\n        const addFollowing = await db.collection('users').where('userId', '==', currUserId).get();\r\n        const currUserDocId = addFollowing.docs[0].id;\r\n        const mappedCurrentUser = addFollowing.docs.map(doc => doc.data())[0];\r\n        \r\n        if ( mappedUser.followers.includes(currUserId) ) {\r\n           const index = mappedUser.followers.findIndex(e => e == currUserId);\r\n          \r\n            mappedUser.followers.splice(index, 1);\r\n            const index2 = mappedCurrentUser.following.findIndex(e => e== userId);\r\n            mappedCurrentUser.following.splice(index2, 1);\r\n            \r\n        } else {\r\n            mappedUser.followers.push(currUserId);\r\n            mappedCurrentUser.following.push(userId);\r\n        }\r\n\r\n        console.log('current user changed');\r\n        console.log(mappedCurrentUser);\r\n\r\n        console.log('other user changed');\r\n        console.log(mappedUser)\r\n\r\n\r\n        const addFollower = await db.collection('users').doc(otherUserDocId).set(mappedUser);\r\n        const addFollowingtoDb = await db.collection('users').doc(currUserDocId).set(mappedCurrentUser);\r\n        initialCheckFollow(userId);\r\n    }\r\n\r\n    const initialCheckFollow = async(otherUserId) => {\r\n\r\n        const currentUserId = await firebaseApp.auth().currentUser.uid;\r\n\r\n        const currentUserDb = await db.collection('users').where('userId', '==', currentUserId).get();\r\n\r\n        const currUserDbMapped = currentUserDb.docs.map(doc => doc.data())[0];\r\n\r\n        const otheruser = await db.collection('users').where('userId', '==', otherUserId).get();\r\n       \r\n        const mappedotherUser = otheruser.docs.map(doc => doc.data())[0];\r\n\r\n        setNumberOfFollowers(mappedotherUser.followers.length);\r\n        setNumberOfFollowing(mappedotherUser.following.length);\r\n\r\n        \r\n        \r\n        if (currUserDbMapped.following.includes(otherUserId) ) {\r\n            setFollowed(true);\r\n            console.log('true')\r\n        } else {\r\n            setFollowed(false)\r\n            console.log('false')\r\n        }\r\n    }\r\n\r\n    const switchTab = num => {\r\n        setCurrentTab(num); \r\n        if (num == 1) {\r\n            tab1Ref.current.className = 'visible-tab';\r\n            tab2Ref.current.className = 'invisible-tab';\r\n            tab3Ref.current.className = 'invisible-tab';\r\n            tab4Ref.current.className = 'invisible-tab';\r\n\r\n            tab1.current.className = 'tweets-tweets-active';\r\n            tab2.current.className ='tweets-tweets-nonactive';\r\n            tab3.current.className ='tweets-tweets-nonactive';\r\n            tab4.current.className= 'tweets-tweets-nonactive'\r\n\r\n        } else if (num == 2) {\r\n            tab1Ref.current.className = 'invisible-tab';\r\n            tab2Ref.current.className = 'visible-tab';\r\n            tab3Ref.current.className = 'invisible-tab';\r\n            tab4Ref.current.className = 'invisible-tab';\r\n\r\n            tab1.current.className = 'tweets-tweets-nonactive';\r\n            tab2.current.className ='tweets-tweets-active';\r\n            tab3.current.className ='tweets-tweets-nonactive';\r\n            tab4.current.className= 'tweets-tweets-nonactive'\r\n        } else if (num == 3) {\r\n            tab1Ref.current.className = 'invisible-tab';\r\n            tab2Ref.current.className = 'invisible-tab';\r\n            tab3Ref.current.className = 'visible-tab';\r\n            tab4Ref.current.className = 'invisible-tab';\r\n\r\n            tab1.current.className = 'tweets-tweets-nonactive';\r\n            tab2.current.className ='tweets-tweets-nonactive';\r\n            tab3.current.className ='tweets-tweets-active';\r\n            tab4.current.className= 'tweets-tweets-nonactive'\r\n        }\r\n\r\n        else if (num == 4) {\r\n            tab1Ref.current.className = 'invisible-tab';\r\n            tab2Ref.current.className = 'invisible-tab';\r\n            tab3Ref.current.className = 'invisible-tab';\r\n            tab4Ref.current.className = 'visible-tab';\r\n\r\n            tab1.current.className = 'tweets-tweets-nonactive';\r\n            tab2.current.className ='tweets-tweets-nonactive';\r\n            tab3.current.className ='tweets-tweets-nonactive';\r\n            tab4.current.className= 'tweets-tweets-active'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='profile'>\r\n            <Sidebar />\r\n                <div className='profile-col'>\r\n                    <div className='profile-header'>\r\n                        \r\n                        <Avatar src={avatar} className='avatar-large' />\r\n                        <div className='profile-info-other'>\r\n                            <div>\r\n                            <div className='displayname-profile'>{displayName}</div> \r\n                            <div className='twittername-profile'>@{twitterName}</div> \r\n                            <div className='joined-profile'><CalendarTodayIcon className='inline-icon' />  Joined {joined} </div>\r\n                            <div className='following-followers-profile'><strong>{numberOfFollowing}</strong> following <strong>{numberOfFollowers} </strong> followers</div>\r\n                            <div className='bio-profile'>{myBio}</div>\r\n                            </div>\r\n                            \r\n                            <div>\r\n                                <button className='follow-unfollow-btn' onClick={() => addRemoveFollow()}>{followed ? 'Unfollow' : 'Follow'}</button>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='select-profile'>\r\n                            <div className='tweets-tweets select-profile-item tweets-tweets-active' ref={tab1} onClick={() => switchTab(1)}> Tweets </div>\r\n                            <div className='tweets-replies select-profile-item' ref={tab2} onClick={() => switchTab(2)}>Tweets & replies</div>\r\n                            <div className='tweets-media select-profile-item' ref={tab3} onClick={() => switchTab(3)}> Media</div>\r\n                            <div className='tweets-likes select-profile-item' ref={tab4} onClick={() => switchTab(4)}>Likes</div>\r\n                        </div>\r\n                    </div>\r\n                    <div id='1' ref={tab1Ref} className='visible-tab'>\r\n                   {myTweets.map(e => {\r\n                       return (\r\n                                        <Post \r\n                                        \r\n                                text={e.text} \r\n                                displayName={e.displayName}\r\n                        userName={e.userName}\r\n                        avatar={e.avatar}\r\n                        verified={e.verified}\r\n                        timeStamp={e.timeStamp}\r\n                        text={e.text}\r\n                        image={e.image}\r\n                        likes={e.likes}\r\n                        retweets={e.retweets}\r\n                        responses={e.responses}\r\n                        currUser={thisuserId}\r\n                        retweeted= {e.retweet ? true : false}\r\n                        />\r\n                       )\r\n                   })}\r\n                   </div>\r\n                    <div id='2' ref={tab2Ref} className='invisible-tab'>\r\n                   {alltweets.map(e => {\r\n                       return (\r\n                                        <Post \r\n                                        \r\n                                text={e.text} \r\n                                displayName={e.displayName}\r\n                        userName={e.userName}\r\n                        avatar={e.avatar}\r\n                        verified={e.verified}\r\n                        timeStamp={e.timeStamp}\r\n                        text={e.text}\r\n                        image={e.image}\r\n                        likes={e.likes}\r\n                        retweets={e.retweets}\r\n                        responses={e.responses}\r\n                        currUser={thisuserId}\r\n                        retweeted= {e.retweet ? true : false}\r\n                        />\r\n                       )\r\n                   })}\r\n                   </div>\r\n\r\n                   <div id='3' ref={tab3Ref} className='invisible-tab'>\r\n                    {\r\n                        tweetsWithMedia.map(e => {\r\n                            return (\r\n                                <Post \r\n                                text={e.text} \r\n                                displayName={e.displayName}\r\n                        userName={e.userName}\r\n                        avatar={e.avatar}\r\n                        verified={e.verified}\r\n                        timeStamp={e.timeStamp}\r\n                        text={e.text}\r\n                        image={e.image}\r\n                        likes={e.likes}\r\n                        retweets={e.retweets}\r\n                        responses={e.responses}\r\n                        currUser={thisuserId}\r\n                        retweeted= {e.retweet ? true : false}\r\n                        />\r\n                            )\r\n                        })\r\n                    }\r\n                   </div>\r\n\r\n                   <div id='4' ref={tab4Ref} className='invisible-tab'>\r\n                   {myLikes.map(e => {\r\n                       return (\r\n                                        <Post \r\n                                        \r\n                                text={e.text} \r\n                                displayName={e.displayName}\r\n                        userName={e.userName}\r\n                        avatar={e.avatar}\r\n                        verified={e.verified}\r\n                        timeStamp={e.timeStamp}\r\n                        text={e.text}\r\n                        image={e.image}\r\n                        likes={e.likes}\r\n                        retweets={e.retweets}\r\n                        responses={e.responses}\r\n                        currUser={thisuserId}\r\n                        retweeted= {e.retweet ? true : false}\r\n                        />\r\n                       )\r\n                   })}\r\n                   </div>\r\n                </div>\r\n          <Widgets \r\n          userIdForImg={user[5]}\r\n          />\r\n        </div>\r\n    )\r\n}","import logo from './logo.svg';\nimport Register from './register';\nimport Login from './login';\nimport Sidebar from './sidebar';\nimport Feed from './feed';\nimport Widgets from './widgets';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport './App.css'\nimport RegisterForm from './registerform';\nimport RegisterTwo from './registertwo';\nimport Profile from './profile';\nimport OtherUserProfile from './otheruserprofile';\nimport { firebaseApp } from './firebase';\n\nimport {useState, useEffect} from 'react';\n\n\n\n\nfunction App() {\n  const [currUser, setCurrUser] = useState(); \n  \n  useEffect(() => {\n    firebaseApp.auth().onAuthStateChanged(user => {\n      if (user) {\n        setCurrUser(user.uid);\n      }\n    })\n  },[currUser])\n  \n  return (\n   \n     \n     <Router>\n       <Switch>\n         <Route path='/dashboard'>\n         <div className=\"app\">\n          <Sidebar />\n          <Feed />\n          <Widgets userIdForImg={currUser} />\n          </div>\n         </Route>\n         <Route path='/register'>\n           <Register />\n         </Route>\n         <Route path='/login'>\n           <Login />\n         </Route>\n         <Route path='/registerform'>\n           <RegisterForm />\n         </Route>\n         <Route path='/registertwo'>\n           <RegisterTwo />\n         </Route>\n         <Route path='/profile'>\n           <Profile />\n         </Route>\n         <Route path='/otheruserprofile'>\n           <OtherUserProfile />\n         </Route>\n       </Switch>\n     </Router>\n     \n     \n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const userInfo = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'ADD_USERINFO':\r\n            return action.payload;\r\n        default:\r\n            return state    \r\n    }\r\n}\r\n\r\nexport default userInfo;","const updatecomponent = (state = 0, action) => {\r\n    switch (action.type) {\r\n        case 'UPDATE':\r\n            return state+1;\r\n        default:\r\n            return state    \r\n    }\r\n}\r\n\r\nexport default updatecomponent;","const userId = (state = '', action) => {\r\n    switch (action.type) {\r\n        case 'USERID':\r\n            return action.payload;\r\n        default:\r\n            return state    \r\n    }\r\n}\r\n\r\nexport default userId;","import { combineReducers } from 'redux';\r\nimport userInfo from './userInfo';\r\nimport update from './updatecomponent';\r\nimport userId from './userId';\r\n\r\nexport default combineReducers({\r\n    userInfo,\r\n    update,\r\n    userId\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(\n  <React.StrictMode>\n     <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nexport {store}\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}